{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shanealan/v_school/level_5/chorderly/client/src/components/UserCard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useState, useEffect } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { ChoreContext } from '../context/ChoreContext';\nimport { UserContext } from '../context/UserContext';\nconst CardWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    //border: thick solid ${props => props.theme.primary};\n    //box-shadow: inset 2px 2px 2px 0 rgba(255,255,255,.7), 2px 2px 2px 0 rgba(0,0,0,.7);\n    border-radius: 10px;\n    width: 100%;\n    height: auto;\n    //grid-column: ${props => props.column};\n    //sgrid-row: ${props => props.row};\n    padding: 20px;\n    margin: 20px;\n    background-color: ${props => props.theme.light};\n    color: ${props => props.theme.secondary};\n    box-shadow: 3px 3px 3px${props => props.theme.colors.black};\n    border: thin solid ${props => props.theme.dark};\n    cursor: pointer;\n    \n`;\n_c = CardWrapper;\nconst Header = styled.h2`\ncolor: ${props => props.theme.dark};\n`;\n_c2 = Header;\nconst List = styled.ul`\nlist-style: none;\ndisplay: inline-flex;\n\n\n`;\nconst Paragraph = styled.p`\ntext-transform: capitalize;\nfont-size: 1.2rem;\n`;\n_c3 = Paragraph;\n\nconst UserCard = props => {\n  _s();\n\n  const {\n    users,\n    setUsers\n  } = useContext(UserContext);\n  const {\n    chores\n  } = useContext(ChoreContext);\n  const [usersChores, setUsersChores] = useState([]);\n  useEffect(() => {\n    const filtered = chores.filter(chore => chore.user === props._id).map(chore => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [\" \", chore.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 20\n    }, this));\n    setUsersChores(filtered);\n  }, [chores]);\n\n  const handleClick = e => {\n    e.preventDefault();\n    const currentUser = users.all.find(user => user._id === props._id);\n    setUsers(prev => ({ ...prev,\n      current: currentUser\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    onClick: handleClick,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: props.userName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Paragraph, {\n      children: props.chores.map((chore, indx) => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          children: `${indx === 0 ? \" \" : \", \"} ${chore.name}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 43\n    }, this), \" \", /*#__PURE__*/_jsxDEV(Paragraph, {\n      children: [\" Points : \", props.points, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserCard, \"LdnNrqRIDgvAuDdol5KoE+wRvmo=\");\n\n_c4 = UserCard;\nexport default UserCard;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Paragraph\");\n$RefreshReg$(_c4, \"UserCard\");","map":{"version":3,"sources":["/Users/shanealan/v_school/level_5/chorderly/client/src/components/UserCard.jsx"],"names":["React","useContext","useState","useEffect","styled","withTheme","ChoreContext","UserContext","CardWrapper","div","props","theme","primary","column","row","light","secondary","colors","black","dark","Header","h2","List","ul","Paragraph","p","UserCard","users","setUsers","chores","usersChores","setUsersChores","filtered","filter","chore","user","_id","map","name","handleClick","e","preventDefault","currentUser","all","find","prev","current","userName","indx","points"],"mappings":"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","sourcesContent":["import React, {useContext, useState, useEffect} from 'react'\nimport styled, {withTheme} from 'styled-components'\nimport {ChoreContext} from '../context/ChoreContext'\nimport {UserContext} from '../context/UserContext'\nconst CardWrapper = styled.div `\n    display: flex;\n    flex-direction: column;\n    //border: thick solid ${props => props.theme.primary};\n    //box-shadow: inset 2px 2px 2px 0 rgba(255,255,255,.7), 2px 2px 2px 0 rgba(0,0,0,.7);\n    border-radius: 10px;\n    width: 100%;\n    height: auto;\n    //grid-column: ${props => props.column};\n    //sgrid-row: ${props => props.row};\n    padding: 20px;\n    margin: 20px;\n    background-color: ${props => props.theme.light};\n    color: ${props => props.theme.secondary};\n    box-shadow: 3px 3px 3px${props => props.theme.colors.black};\n    border: thin solid ${props => props.theme.dark};\n    cursor: pointer;\n    \n`\nconst Header = styled.h2 `\ncolor: ${props => props.theme.dark};\n`\nconst List = styled.ul `\nlist-style: none;\ndisplay: inline-flex;\n\n\n`\nconst Paragraph = styled.p `\ntext-transform: capitalize;\nfont-size: 1.2rem;\n`\n\nconst UserCard = props => {\n  const {users, setUsers} = useContext(UserContext)\n  const {chores} = useContext(ChoreContext)\n  const [usersChores,\n    setUsersChores] = useState([])\n  useEffect(() => {\n    const filtered = chores\n      .filter(chore => chore.user === props._id)\n      .map(chore =>< li > {\n        chore.name\n      } < /li>)\n      setUsersChores(filtered)\n    }, [chores])\n    const handleClick=(e)=>{\n        e.preventDefault()\n        const currentUser = users.all.find(user=> user._id === props._id)\n        setUsers(prev=>({\n            ...prev, \n            current: currentUser\n        }))\n    }\n  return (\n    <CardWrapper onClick={handleClick}>\n      <Header >{props.userName}</Header > <Paragraph>{props\n          .chores\n          .map((chore, indx) => {\n            return (\n              <span>{`${indx === 0\n                  ? \" \"\n                  : \", \"} ${chore.name}`}</span>\n            )\n          })}\n      </Paragraph> < Paragraph > Points : {\n        props.points\n      } < /Paragraph>\n     \n    </CardWrapper >)\n  }\n\n  export default UserCard"]},"metadata":{},"sourceType":"module"}