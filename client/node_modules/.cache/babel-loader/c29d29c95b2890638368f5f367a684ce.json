{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shanealan/v_school/level_5/chorderly/client/src/components/ChorePicker.jsx\",\n    _s = $RefreshSig$();\n\n//container for collection of available chores that a user can select\nimport React, { useContext, useEffect, useState } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { ChoreContext } from '../context/ChoreContext';\nimport ChoreCard from './ChoreCard'; //styled components\n\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-direction:column\nwidth: 100%;\n@media (max-width: 1000) {\ngrid-template-columns: 1fr 1fr 1fr 1fr;\n}\n@media (max-width: 768) {\ngrid-template-columns: 1fr 1fr;\n}`;\n_c = Wrapper;\nconst Header = styled.h1`\nbackground-color: ${props => props.theme.secondary_highlight};\n  color: ${props => props.theme.dark};\n  width: 100%;\n  text-align: center;\n\n\n`;\n_c2 = Header;\nconst Row = styled.div`\n\ndisplay: flex;\nplace-content: center;\nmargin: 10px 0;\n`;\n\nconst ChorePicker = props => {\n  _s();\n\n  //gets list of chores from server via context\n  const {\n    chores\n  } = useContext(ChoreContext); //filter out the ones that are not currently available \n\n  let availableChores;\n  const [available, setAvailable] = useState([]);\n  useEffect(() => {\n    availableChores = chores.filter(chore => chore.user === null);\n    setAvailable(availableChores);\n  }, [chores]); //create ChoreCard component for each available chore, passing in all the chore's properties as props\n\n  const choreCards = available.map(chore => /*#__PURE__*/_jsxDEV(ChoreCard, { ...chore\n  }, chore._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Available Chores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), choreCards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChorePicker, \"wC8KSZ5HNJpfvDJ9zkYZ7gTe4xU=\");\n\n_c3 = ChorePicker;\nexport default ChorePicker;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ChorePicker\");","map":{"version":3,"sources":["/Users/shanealan/v_school/level_5/chorderly/client/src/components/ChorePicker.jsx"],"names":["React","useContext","useEffect","useState","styled","withTheme","ChoreContext","ChoreCard","Wrapper","div","Header","h1","props","theme","secondary_highlight","dark","Row","ChorePicker","chores","availableChores","available","setAvailable","filter","chore","user","choreCards","map","_id"],"mappings":";;;;;AAAA;AACA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,MAAP,IAAgBC,SAAhB,QAAgC,mBAAhC;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CAEA;;AACA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EATA;KAAMD,O;AAUN,MAAME,MAAM,GAAGN,MAAM,CAACO,EAAI;AAC1B,oBAAoBC,KAAK,IAAEA,KAAK,CAACC,KAAN,CAAYC,mBAAoB;AAC3D,WAAWF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,IAAK;AACrC;AACA;AACA;AACA;AACA,CAPA;MAAML,M;AAQN,MAAMM,GAAG,GAAGZ,MAAM,CAACK,GAAK;AACxB;AACA;AACA;AACA;AACA,CALA;;AAOA,MAAMQ,WAAW,GAAGL,KAAK,IAAI;AAAA;;AAC3B;AACA,QAAM;AAACM,IAAAA;AAAD,MAAWjB,UAAU,CAACK,YAAD,CAA3B,CAF2B,CAG3B;;AACA,MAAIa,eAAJ;AACA,QAAM,CAACC,SAAD,EACJC,YADI,IACYlB,QAAQ,CAAC,EAAD,CAD1B;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,eAAe,GAAGD,MAAM,CAACI,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAe,IAAtC,CAAlB;AACAH,IAAAA,YAAY,CAACF,eAAD,CAAZ;AACD,GAHQ,EAGN,CAACD,MAAD,CAHM,CAAT,CAP2B,CAW7B;;AACE,QAAMO,UAAU,GAAGL,SAAS,CAACM,GAAV,CAClBH,KAAD,iBAAU,QAAE,SAAF,OAILA;AAJK,KACRA,KAAK,CAACI,GADE;AAAA;AAAA;AAAA;AAAA,UADS,CAAnB;AAOA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAzBD;;GAAMR,W;;MAAAA,W;AA2BN,eAAeA,WAAf","sourcesContent":["//container for collection of available chores that a user can select\nimport React, {useContext, useEffect, useState} from 'react'\nimport styled, {withTheme} from 'styled-components'\nimport {ChoreContext} from '../context/ChoreContext'\nimport ChoreCard from './ChoreCard'\n\n//styled components\nconst Wrapper = styled.div `\ndisplay: flex;\nflex-direction:column\nwidth: 100%;\n@media (max-width: 1000) {\ngrid-template-columns: 1fr 1fr 1fr 1fr;\n}\n@media (max-width: 768) {\ngrid-template-columns: 1fr 1fr;\n}`\nconst Header = styled.h1 `\nbackground-color: ${props=>props.theme.secondary_highlight};\n  color: ${props => props.theme.dark};\n  width: 100%;\n  text-align: center;\n\n\n`\nconst Row = styled.div `\n\ndisplay: flex;\nplace-content: center;\nmargin: 10px 0;\n`\n\nconst ChorePicker = props => {\n  //gets list of chores from server via context\n  const {chores} = useContext(ChoreContext)\n  //filter out the ones that are not currently available \n  let availableChores\n  const [available,\n    setAvailable] = useState([])\n  useEffect(() => {\n    availableChores = chores.filter(chore => chore.user === null)\n    setAvailable(availableChores)\n  }, [chores])\n//create ChoreCard component for each available chore, passing in all the chore's properties as props\n  const choreCards = available.map(\n  (chore) =>< ChoreCard key = {\n    chore._id\n  }\n  {\n    ...chore\n  } />)\n  return (\n    <Wrapper>\n      <Header>Available Chores</Header>\n      {choreCards}\n    </Wrapper>\n  )\n}\n\nexport default ChorePicker"]},"metadata":{},"sourceType":"module"}