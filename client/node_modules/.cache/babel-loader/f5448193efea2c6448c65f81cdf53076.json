{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shanealan/v_school/level_5/chorderly/client/src/components/ChoreCard.jsx\",\n    _s = $RefreshSig$();\n\n//Representation of a chore, both for selecting a chore and as your todo list\nimport React, { useContext, useState } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { UserContext } from '../context/UserContext';\nimport { ChoreContext } from '../context/ChoreContext';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faWindowClose, faPlusCircle, faCaretDown, faCaretUp } from '@fortawesome/free-solid-svg-icons'; //styled components - notice the ${props =>props.theme....}, that is a callback function inside a template litteral ands is how you access props you pass to the element through attributes in the JSX or through the theme context\n\nconst CardWrapper = styled.div`\n    display: flex;\n    flex-direction:  column;\n    border-radius: 5px;\n    width: auto;\n    height: auto;\n    padding: 20px;\n    margin: 10px;\n    background-color: ${props => props.theme.light};\n    color: ${props => props.theme.colors.dark};\n    position: relative;\n \n`;\n_c = CardWrapper;\nconst Close = styled(FontAwesomeIcon)`\n  color: ${props => props.theme.colors.red};\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  text-shadow: 2px 2px 5px #000;\n  transition: .2s ease all;\n  cursor: pointer;\n  &:hover{\n    color: ${props => props.theme.colors.red_light};\n  }\n`;\n_c2 = Close;\nconst Add = styled(FontAwesomeIcon)`\n  font-size: 32px;\n  color: ${props => props.theme.colors.green};\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  transition: .2s ease all;\n  cursor: pointer;\n  &:hover{\n    color: ${props => props.theme.colors.green_light};\n  }\n`;\n_c3 = Add;\nconst Toggle = styled(FontAwesomeIcon)`\nfont-size: 24px;\ncolor: ${props => props.theme.blue};\n`;\n_c4 = Toggle;\nconst Row = styled.div`\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n`;\n_c5 = Row;\nconst Checkbox = styled.input`\nwidth: 24px;\nheight: 24px;\nmargin-right: 15px;\n@media (max-width: 768px) {\n  width: 18px;\n  height: 18px;\n}\n`;\n_c6 = Checkbox;\nconst Header = styled.h1`\n    text-transform: capitalize;\n    text-decoration: ${props => {\n  return props.completed ? \"line-through\" : \"none\";\n}};\n    @media (max-width: 768px) {\n      font-size: 1rem;\n    }\n`;\n_c7 = Header;\nconst SubHeader = styled.h3`\n    text-transform: capitalize;\n    margin: 0 25px;\n    text-decoration: ${props => {\n  return props.completed ? \"line-through\" : \"none\";\n}};\n    @media (max-width: 768px) {\n      font-size: .8rem;\n      margin: 0 15px;\n      }\n`;\n_c8 = SubHeader;\nconst Paragraph = styled.p`\n    transition: 2s ease all;\n    text-decoration: ${props => {\n  return props.completed ? \"line-through\" : \"none\";\n}};\n    @media (max-width: 768px) {\n      font-size: .7rem;\n      \n      }\n`;\n_c9 = Paragraph;\n\nconst Chore = props => {\n  _s();\n\n  //access the methods and data passed through context - used to give functionality to the buttons, checkmark, etc\n  const {\n    users\n  } = useContext(UserContext);\n  const {\n    assignChore,\n    unAssignChore,\n    markCompleted,\n    updateChores,\n    updateOneChore\n  } = useContext(ChoreContext); //give funtion to the arrow that toggles the amount of detail being shown\n\n  const [expanded, setExpanded] = useState(false);\n\n  const toggleExpanded = e => {\n    e.preventDefault();\n    setExpanded(prev => !prev);\n  }; //When checkbox is checked, the chore is marked as completed in the database and the current timestamp \n  //is added to its history and all chores are updated on the client side, which triggers css to show the \n  //checkbox as checked and adding a line-through to the text. Also \n  //***todo: add validation on the model to block multiple timestamps added oer day***\n\n\n  const handleCheckbox = e => {\n    if (props.completed === false) {\n      const now = new Date();\n      updateOneChore(props._id, {\n        completed: true,\n        history: [...props.history, now]\n      });\n      updateChores();\n    } else {\n      updateOneChore(props._id, {\n        completed: false,\n        history: props.history.splice(-1, 1)\n      });\n      updateChores();\n    }\n  };\n\n  const handleCompleted = e => {\n    markCompleted(props._id);\n    updateChores();\n  };\n\n  return /*#__PURE__*/_jsxDEV(CardWrapper, {\n    children: [props.user === null ? /*#__PURE__*/_jsxDEV(Add, {\n      icon: faPlusCircle,\n      onClick: e => assignChore(props._id, users.current._id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 32\n    }, this) : /*#__PURE__*/_jsxDEV(Close, {\n      icon: faWindowClose,\n      onClick: e => unAssignChore(props._id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 118\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        type: \"checkbox\",\n        onChange: handleCheckbox,\n        checked: props.completed,\n        name: \"completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header, {\n        completed: props.completed,\n        children: props.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubHeader, {\n        completed: props.completed,\n        children: props.frequency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SubHeader, {\n        completed: props.completed,\n        children: `${props.pointValue} Points`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), props.minage ? /*#__PURE__*/_jsxDEV(SubHeader, {\n        completed: props.completed,\n        children: `Ages ${props.minage} and up`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: expanded ? /*#__PURE__*/_jsxDEV(Paragraph, {\n        children: props.details\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 13\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Toggle, {\n      onClick: toggleExpanded,\n      icon: expanded ? faCaretUp : faCaretDown\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chore, \"XuVFHGMt9b/6Ov6wDE5mRmVn+vk=\");\n\n_c10 = Chore;\nexport default Chore;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"CardWrapper\");\n$RefreshReg$(_c2, \"Close\");\n$RefreshReg$(_c3, \"Add\");\n$RefreshReg$(_c4, \"Toggle\");\n$RefreshReg$(_c5, \"Row\");\n$RefreshReg$(_c6, \"Checkbox\");\n$RefreshReg$(_c7, \"Header\");\n$RefreshReg$(_c8, \"SubHeader\");\n$RefreshReg$(_c9, \"Paragraph\");\n$RefreshReg$(_c10, \"Chore\");","map":{"version":3,"sources":["/Users/shanealan/v_school/level_5/chorderly/client/src/components/ChoreCard.jsx"],"names":["React","useContext","useState","styled","withTheme","UserContext","ChoreContext","FontAwesomeIcon","faWindowClose","faPlusCircle","faCaretDown","faCaretUp","CardWrapper","div","props","theme","light","colors","dark","Close","red","red_light","Add","green","green_light","Toggle","blue","Row","Checkbox","input","Header","h1","completed","SubHeader","h3","Paragraph","p","Chore","users","assignChore","unAssignChore","markCompleted","updateChores","updateOneChore","expanded","setExpanded","toggleExpanded","e","preventDefault","prev","handleCheckbox","now","Date","_id","history","splice","handleCompleted","user","current","name","frequency","pointValue","minage","details"],"mappings":"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","sourcesContent":["//Representation of a chore, both for selecting a chore and as your todo list\nimport React, {useContext, useState} from 'react'\nimport styled, {withTheme} from 'styled-components'\nimport {UserContext} from '../context/UserContext'\nimport {ChoreContext} from '../context/ChoreContext'\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome'\nimport {faWindowClose, faPlusCircle, faCaretDown, faCaretUp} from '@fortawesome/free-solid-svg-icons'\n\n//styled components - notice the ${props =>props.theme....}, that is a callback function inside a template litteral ands is how you access props you pass to the element through attributes in the JSX or through the theme context\nconst CardWrapper = styled.div `\n    display: flex;\n    flex-direction:  column;\n    border-radius: 5px;\n    width: auto;\n    height: auto;\n    padding: 20px;\n    margin: 10px;\n    background-color: ${props => props.theme.light};\n    color: ${props => props.theme.colors.dark};\n    position: relative;\n \n`\nconst Close = styled(FontAwesomeIcon)`\n  color: ${props=>props.theme.colors.red};\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  font-size: 24px;\n  text-shadow: 2px 2px 5px #000;\n  transition: .2s ease all;\n  cursor: pointer;\n  &:hover{\n    color: ${props=>props.theme.colors.red_light};\n  }\n`\nconst Add = styled(FontAwesomeIcon)`\n  font-size: 32px;\n  color: ${props=>props.theme.colors.green};\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  transition: .2s ease all;\n  cursor: pointer;\n  &:hover{\n    color: ${props=>props.theme.colors.green_light};\n  }\n`\nconst Toggle = styled(FontAwesomeIcon)`\nfont-size: 24px;\ncolor: ${props=>props.theme.blue};\n`\nconst Row = styled.div `\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n`\nconst Checkbox = styled.input`\nwidth: 24px;\nheight: 24px;\nmargin-right: 15px;\n@media (max-width: 768px) {\n  width: 18px;\n  height: 18px;\n}\n`\nconst Header = styled.h1 `\n    text-transform: capitalize;\n    text-decoration: ${props=>{return props.completed ? \"line-through\" : \"none\"}};\n    @media (max-width: 768px) {\n      font-size: 1rem;\n    }\n`\nconst SubHeader = styled.h3 `\n    text-transform: capitalize;\n    margin: 0 25px;\n    text-decoration: ${props=>{return props.completed ? \"line-through\" : \"none\"}};\n    @media (max-width: 768px) {\n      font-size: .8rem;\n      margin: 0 15px;\n      }\n`\nconst Paragraph = styled.p `\n    transition: 2s ease all;\n    text-decoration: ${props=>{return props.completed ? \"line-through\" : \"none\"}};\n    @media (max-width: 768px) {\n      font-size: .7rem;\n      \n      }\n`\n\nconst Chore = props => {\n  //access the methods and data passed through context - used to give functionality to the buttons, checkmark, etc\n  const {users} = useContext(UserContext)\n  const {assignChore, unAssignChore, markCompleted, updateChores, updateOneChore} = useContext(ChoreContext)\n  \n  //give funtion to the arrow that toggles the amount of detail being shown\n  const [expanded,\n    setExpanded] = useState(false)\n    const toggleExpanded = (e) => {\n      e.preventDefault()\n      setExpanded(prev => !prev)\n    }\n  \n\n    //When checkbox is checked, the chore is marked as completed in the database and the current timestamp \n    //is added to its history and all chores are updated on the client side, which triggers css to show the \n    //checkbox as checked and adding a line-through to the text. Also \n    //***todo: add validation on the model to block multiple timestamps added oer day***\n    const handleCheckbox = (e)=>{\n    if (props.completed === false) {\n      const now= new Date()\n      updateOneChore(props._id, {completed: true, history: [...props.history, now ]})\n      updateChores()\n    }\n    else {\n      updateOneChore(props._id, {completed: false, history: props.history.splice(-1,1)})\n      updateChores()\n    }\n  }\n  const handleCompleted = (e) => {\n    markCompleted(props._id)\n    updateChores();\n  }\n  return (\n    <CardWrapper>\n        {props.user === null ? <Add icon={faPlusCircle} onClick={(e)=>assignChore(props._id, users.current._id)}/> : <Close icon={faWindowClose} onClick={(e)=>unAssignChore(props._id)} />}\n      <Row>\n        <Checkbox type=\"checkbox\" onChange={handleCheckbox} checked={props.completed} name=\"completed\"/>\n        <Header completed={props.completed}>{props.name}</Header>\n        <SubHeader completed={props.completed}>{props.frequency}</SubHeader>\n        <SubHeader completed={props.completed}>{`${props.pointValue} Points`}</SubHeader>\n        {props.minage\n          ? <SubHeader completed={props.completed}>{`Ages ${props.minage} and up`}</SubHeader>\n          : null}\n        </Row>\n        \n      \n      <Row>\n        {expanded\n          ? <Paragraph>{props.details}</Paragraph>\n          : null}\n      </Row>\n      <Toggle onClick={toggleExpanded} icon={expanded ? faCaretUp : faCaretDown}/>\n      \n    </CardWrapper>\n\n  )\n}\n\nexport default Chore"]},"metadata":{},"sourceType":"module"}