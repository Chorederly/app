{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shanealan/v_school/level_5/chorderly/client/src/components/ChorePicker.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useState } from 'react';\nimport styled, { withTheme } from 'styled-components';\nimport { ChoreContext } from '../context/ChoreContext';\nimport ChoreCard from './ChoreCard';\nconst Wrapper = styled.div`\ndisplay: flex;\nflex-wrap: wrap;\nwidth: 100%;\n@media (max-width: 1000) {\ngrid-template-columns: 1fr 1fr 1fr 1fr;\n}\n@media (max-width: 768) {\ngrid-template-columns: 1fr 1fr;\n}`;\n_c = Wrapper;\nconst Header = styled.h1`\nbackground-color: ${props => props.theme.highlight};\n  color: ${props => props.theme.dark};\n\n\n`;\n_c2 = Header;\nconst Row = styled.div`\n\ndisplay: flex;\nplace-content: center;\nmargin: 10px 0;\n`;\n\nconst ChorePicker = props => {\n  _s();\n\n  let availableChores;\n  const [available, setAvailable] = useState([]);\n  const {\n    chores,\n    setChores\n  } = useContext(ChoreContext);\n  useEffect(() => {\n    availableChores = chores.filter(chore => chore.user === null);\n    setAvailable(availableChores);\n  }, [chores]);\n  const choreCards = available.map(chore => /*#__PURE__*/_jsxDEV(ChoreCard, { ...chore\n  }, chore._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 13\n  }, this));\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Available Chores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), choreCards]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChorePicker, \"8/i0+VmZFOdjwSfOT/jMdWJ4YXs=\");\n\n_c3 = ChorePicker;\nexport default ChorePicker;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"ChorePicker\");","map":{"version":3,"sources":["/Users/shanealan/v_school/level_5/chorderly/client/src/components/ChorePicker.jsx"],"names":["React","useContext","useEffect","useState","styled","withTheme","ChoreContext","ChoreCard","Wrapper","div","Header","h1","props","theme","highlight","dark","Row","ChorePicker","availableChores","available","setAvailable","chores","setChores","filter","chore","user","choreCards","map","_id"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,UAAf,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAqD,OAArD;AACA,OAAOC,MAAP,IAAgBC,SAAhB,QAAgC,mBAAhC;AACA,SAAQC,YAAR,QAA2B,yBAA3B;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAK;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EATA;KAAMD,O;AAUN,MAAME,MAAM,GAAGN,MAAM,CAACO,EAAI;AAC1B,oBAAoBC,KAAK,IAAEA,KAAK,CAACC,KAAN,CAAYC,SAAU;AACjD,WAAWF,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYE,IAAK;AACrC;AACA;AACA,CALA;MAAML,M;AAMN,MAAMM,GAAG,GAAGZ,MAAM,CAACK,GAAK;AACxB;AACA;AACA;AACA;AACA,CALA;;AAOA,MAAMQ,WAAW,GAAGL,KAAK,IAAI;AAAA;;AAC3B,MAAIM,eAAJ;AACA,QAAM,CAACC,SAAD,EACJC,YADI,IACYjB,QAAQ,CAAC,EAAD,CAD1B;AAEA,QAAM;AAACkB,IAAAA,MAAD;AAASC,IAAAA;AAAT,MAAsBrB,UAAU,CAACK,YAAD,CAAtC;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdgB,IAAAA,eAAe,GAAGG,MAAM,CAACE,MAAP,CAAcC,KAAK,IAAIA,KAAK,CAACC,IAAN,KAAe,IAAtC,CAAlB;AACAL,IAAAA,YAAY,CAACF,eAAD,CAAZ;AACD,GAHQ,EAGN,CAACG,MAAD,CAHM,CAAT;AAKA,QAAMK,UAAU,GAAGP,SAAS,CAACQ,GAAV,CAClBH,KAAD,iBAAU,QAAE,SAAF,OAILA;AAJK,KACRA,KAAK,CAACI,GADE;AAAA;AAAA;AAAA;AAAA,UADS,CAAnB;AAOA,sBACE,QAAC,OAAD;AAAA,4BACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEGF,UAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CAvBD;;GAAMT,W;;MAAAA,W;AAyBN,eAAeA,WAAf","sourcesContent":["import React, {useContext, useEffect, useState} from 'react'\nimport styled, {withTheme} from 'styled-components'\nimport {ChoreContext} from '../context/ChoreContext'\nimport ChoreCard from './ChoreCard'\nconst Wrapper = styled.div `\ndisplay: flex;\nflex-wrap: wrap;\nwidth: 100%;\n@media (max-width: 1000) {\ngrid-template-columns: 1fr 1fr 1fr 1fr;\n}\n@media (max-width: 768) {\ngrid-template-columns: 1fr 1fr;\n}`\nconst Header = styled.h1 `\nbackground-color: ${props=>props.theme.highlight};\n  color: ${props => props.theme.dark};\n\n\n`\nconst Row = styled.div `\n\ndisplay: flex;\nplace-content: center;\nmargin: 10px 0;\n`\n\nconst ChorePicker = props => {\n  let availableChores\n  const [available,\n    setAvailable] = useState([])\n  const {chores, setChores} = useContext(ChoreContext)\n  useEffect(() => {\n    availableChores = chores.filter(chore => chore.user === null)\n    setAvailable(availableChores)\n  }, [chores])\n\n  const choreCards = available.map(\n  (chore) =>< ChoreCard key = {\n    chore._id\n  }\n  {\n    ...chore\n  } />)\n  return (\n    <Wrapper>\n      <Header>Available Chores</Header>\n      {choreCards}\n    </Wrapper>\n  )\n}\n\nexport default ChorePicker"]},"metadata":{},"sourceType":"module"}