{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/shanealan/v_school/level_5/chorderly/client/src/context/ChoreContext.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nconst ChoreContext = /*#__PURE__*/React.createContext(null);\n\nconst ChoreContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [chores, setChores] = useState([]);\n\n  const updateChores = () => {\n    axios.get(\"/chores\").then(resp => {\n      console.log(resp);\n      console.log(`setting Chores from: ${chores}`);\n      setChores(resp.data);\n      console.log(`to: ${chores}`);\n    }).catch(err => console.log(err));\n  };\n\n  useEffect(() => {\n    updateChores();\n  }, []);\n\n  const assignChore = (choreId, userId) => {\n    axios.put(`/chores/updateOne/${choreId}`, {\n      user: userId,\n      available: false\n    }).then(resp => {\n      console.log(resp);\n      updateChores();\n    }).catch(err => console.log(err));\n  };\n\n  const unAssignChore = choreId => {\n    axios.put(`chores/updateOne/${choreId}`, {\n      user: null,\n      completed: false,\n      available: true\n    }).then(res => {\n      updateChores();\n    }).catch(err => console.log(err));\n  };\n\n  const markComplete = choreId => {\n    let prom = axios.put(`chores/updateOne/${choreId}`, {\n      complete: `${Date.now}`\n    });\n    return prom;\n  };\n\n  const resetChores = (weekly = true, monthly = true, asneeded = true) => {\n    axios.get(`/resetAll/?weekly=${weekly}&monthly=${monthly}&asneeded=${asneeded}`).then(res => {\n      updateChores();\n    }).catch(err => console.log(err));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ChoreContext.Provider, {\n    value: {\n      chores,\n      setChores,\n      unAssignChore,\n      assignChore,\n      updateChores,\n      markComplete\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ChoreContextProvider, \"bHjTQKKpZSlu2bTYL0F/gZcfHtA=\");\n\n_c = ChoreContextProvider;\nexport { ChoreContext, ChoreContextProvider };\n\nvar _c;\n\n$RefreshReg$(_c, \"ChoreContextProvider\");","map":{"version":3,"sources":["/Users/shanealan/v_school/level_5/chorderly/client/src/context/ChoreContext.jsx"],"names":["React","useState","useEffect","axios","ChoreContext","createContext","ChoreContextProvider","children","chores","setChores","updateChores","get","then","resp","console","log","data","catch","err","assignChore","choreId","userId","put","user","available","unAssignChore","completed","res","markComplete","prom","complete","Date","now","resetChores","weekly","monthly","asneeded"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\n\nconst ChoreContext = React.createContext(null)\n\nconst ChoreContextProvider = ({children}) => {\n  const [chores,\n    setChores] = useState([])\n  const updateChores = () => {\n    axios\n      .get(\"/chores\")\n      .then(resp => {\n        console.log(resp)\n        console.log(`setting Chores from: ${chores}`)\n        setChores(resp.data)\n        console.log(`to: ${chores}`)\n      })\n      .catch(err => console.log(err))\n  }\n  useEffect(() => {\n    updateChores()\n  }, [])\n  const assignChore = (choreId, userId) => {\n    axios\n      .put(`/chores/updateOne/${choreId}`, {\n      user: userId,\n      available: false\n    })\n      .then(resp => {\n        console.log(resp)\n        updateChores()\n      })\n      .catch(err => console.log(err))\n  }\n\n  const unAssignChore = (choreId) => {\n    axios\n      .put(`chores/updateOne/${choreId}`, {\n      user: null,\n      completed: false,\n      available: true\n    })\n      .then(res => {\n        updateChores()\n      })\n      .catch(err => console.log(err))\n  }\n  const markComplete = choreId => {\n    let prom = axios.put(`chores/updateOne/${choreId}`, {complete: `${Date.now}`})\n      return prom\n  }\n  const resetChores = (weekly = true, monthly = true, asneeded = true) => {\n    axios\n      .get(`/resetAll/?weekly=${weekly}&monthly=${monthly}&asneeded=${asneeded}`)\n      .then((res) => {\n        updateChores()\n      })\n      .catch(err => console.log(err))\n  }\n\n  return (\n    <ChoreContext.Provider\n      value={{\n      chores,\n      setChores,\n      unAssignChore,\n      assignChore,\n      updateChores,\n      markComplete\n    }}>\n      {children}\n    </ChoreContext.Provider>\n  )\n}\n\nexport {ChoreContext, ChoreContextProvider}"]},"metadata":{},"sourceType":"module"}